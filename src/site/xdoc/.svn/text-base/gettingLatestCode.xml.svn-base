<?xml version="1.0"?>
<document>

    <properties>
        <title>Getting latest HtmlUnit build</title>
        <author email="mbowler@GargoyleSoftware.com">Mike Bowler</author>
        <author email="BarnabyCourt@users.sourceforge.net">BarnabyCourt</author>
        <author email="mguillem@users.sourceforge.net">Marc Guillemot</author>
        <author email="asashour@users.sourceforge.net">Ahmed Ashour</author>
        <revision>$Revision$</revision>
    </properties>

    <body>
        <section>
            <p>
                At any time, all the code in SVN should be compilable and should pass all the unit tests.  There
                is no guarantee that it will be full featured - this is a work in progress.
            </p>
        </section>

        <section name="Latest build">
            <p>
            You can download the latest build from our <a href="http://build.canoo.com/htmlunit">Cruise Control server</a> 
            kindly hosted by <a href="http://www.canoo.com">Canoo AG</a>.
            </p>
        </section>

        <section name="Checking out SVN repository">
            <p>
            Another way to get the latest code is through SVN.
            Create a directory for HtmlUnit (for instance c:\htmlunit or ~/htmlunit).  Change to that directory and execute the
            following commands.
            </p>
            <source>
svn co https://htmlunit.svn.sourceforge.net/svnroot/htmlunit/trunk/htmlunit .
            </source>
        </section>

        <section name="Compiling the code">
            <p>
                Although it is still possible to compile the code with 
                <a href="http://ant.apache.org">Ant</a> 1.5 or higher, the preferred way
                to build HtmlUnit is with <a href="http://maven.apache.org">maven 2</a>.
            </p>
            <source>mvn compile</source>
            <p>
                This will do an incremental compile of all the code.
            </p>
            <source>mvn clean compile</source>
            <p>
                This will do a clean compile of all the code.
            </p>
        </section>

        <section name="Dependencies for IDE">
            <p>
                Usually, you need to get the JARs for your IDE.
                You can do that by:
            </p>
            <source>ant initialize</source>
            <p>
                This will download all required and optional JARs into <tt>ant-jars</tt> folder.
                Note that HtmlUnit is mostly at the bleeding edge, to the extent that an HtmlUnit-local repository
                has been created to store snapshots of various dependencies. 
            </p>
        </section>

        <section name="Running the tests">
            <p>
                All the tests are based on <a href="http://www.junit.org/">JUnit</a>.  The standard
                maven way of running the tests results in a large number of test reports which can
                be difficult to sift through to find failures.  The fast-test goal has been created
                to provide a quick run of the tests that dumps easy status information to the command
                line.
            </p>
            <source>mvn test</source>
            <p>
                This will force a recompile of the java classes if needed.
            </p>
        </section>

        <section name="Packaging">
            <source>mvn package</source>
            <p>
                In the project's target directory you'll able to see the generated jar file with the
                name "htmlunit-" followed by the version number.
            </p>
            <source>mvn source:jar</source>
            <p>
                This generates a source jar file.
            </p>
            <source>mvn source:test-jar</source>
            <p>
                This will generate a jar file of the test sources.
            </p>
        </section>

    </body>
</document>
